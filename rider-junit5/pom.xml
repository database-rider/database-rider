<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>rider-parent</artifactId>
        <groupId>com.github.database-rider</groupId>
        <version>1.42.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>rider-junit5</artifactId>

    <properties>
        <version.junit-platform>1.7.2</version.junit-platform>
        <version.junit-jupiter>5.7.2</version.junit-jupiter>
        <src.dir>src/main/java</src.dir>
        <test.dir>src/test/java</test.dir>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.github.database-rider</groupId>
            <artifactId>rider-core</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <!-- this is all you need to write tests with JUnit Jupiter -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${version.junit-jupiter}</version>
            <!-- for writing tests "test" scope would suffice,
                but extensions are defined in the project's "main" folder, so we need "compile" -->
            <scope>compile</scope>
        </dependency>

        <!-- writing extensions -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <version>${version.junit-platform}</version>
            <scope>compile</scope>
        </dependency>

        <!-- to execute Jupiter-tests as part of a v4-run, we need these two artifacts -->
        <dependency>
            <!-- contains the engine that actually runs the Jupiter-tests -->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${version.junit-jupiter}</version>
        </dependency>
        <dependency>
            <!-- contains the engine that actually runs the Jupiter-tests -->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${version.junit-jupiter}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- contains the runner that adapts Jupiter-tests for a v4-run -->
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>${version.junit-platform}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.3.11.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <version>2.2.0.RELEASE</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>5.3.21</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>5.3.21</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-inject</artifactId>
            <version>1.3.6</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-junit5</artifactId>
            <version>1.2.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.3.11.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>3.2.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>jakarta</id>
            <properties>
                <src.dir>${project.build.directory}/classes</src.dir>
                <test.dir>${project.build.directory}/test-classes</test.dir>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.github.database-rider</groupId>
                    <artifactId>rider-core</artifactId>
                    <version>${project.parent.version}</version>
                    <classifier>jakarta</classifier>
                </dependency>
                <dependency>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-core</artifactId>
                    <version>6.2.3.Final</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.persistence</groupId>
                    <artifactId>eclipselink</artifactId>
                    <version>4.0.1</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/java</directory>
                        <includes>
                            <include>**/*.java</include>
                            <include>**/*.jv</include>
                        </includes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.0.2</version>
                        <configuration>
                            <classifier>jakarta</classifier>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <version>2.5.2</version>
                    </plugin>
                    <plugin>
                        <groupId>com.coderplus.maven.plugins</groupId>
                        <artifactId>copy-rename-maven-plugin</artifactId>
                        <version>1.0.1</version>
                        <executions>
                            <execution>
                                <id>copy-and-rename-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet>
                                            <sourceFile>
                                                ${project.basedir}/src/main/java/com/github/database/rider/junit5/util/EntityManagerProvider.jv
                                            </sourceFile>
                                            <destinationFile>
                                                ${project.build.outputDirectory}/com/github/database/rider/junit5/util/EntityManagerProvider.java
                                            </destinationFile>
                                        </fileSet>
                                    </fileSets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.github.floverfelt</groupId>
                        <artifactId>find-and-replace-maven-plugin</artifactId>
                        <version>1.1.0</version>
                        <executions>
                            <execution>
                                <id>exec</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>find-and-replace</goal>
                                </goals>
                                <configuration>
                                    <replacementType>file-contents</replacementType>
                                    <baseDir>target/classes/</baseDir>
                                    <fileMask>.java</fileMask>
                                    <findRegex>javax</findRegex>
                                    <replaceValue>jakarta</replaceValue>
                                    <recursive>true</recursive>
                                </configuration>
                            </execution>
                            <execution>
                                <id>exec-tests</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>find-and-replace</goal>
                                </goals>
                                <configuration>
                                    <replacementType>file-contents</replacementType>
                                    <baseDir>target/test-classes/</baseDir>
                                    <fileMask>.java</fileMask>
                                    <findRegex>javax</findRegex>
                                    <replaceValue>jakarta</replaceValue>
                                    <recursive>true</recursive>
                                </configuration>
                            </execution>
                            <execution>
                                <id>exec-sql</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>find-and-replace</goal>
                                </goals>
                                <configuration>
                                    <replacementType>file-contents</replacementType>
                                    <baseDir>target/classes/</baseDir>
                                    <fileMask>.java</fileMask>
                                    <findRegex>jakarta.sql.DataSource</findRegex>
                                    <replaceValue>javax.sql.DataSource</replaceValue>
                                    <recursive>true</recursive>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <delete>
                                            <fileset dir="${project.build.directory}/classes" includes="**/*.java" />
                                            <fileset dir="${project.build.directory}/classes" includes="**/*.jv" />
                                            <fileset dir="${project.build.directory}/classes" includes="**/beans-jakarta.xml" />
                                        </delete>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <sourceDirectory>${src.dir}</sourceDirectory>
        <testSourceDirectory>${test.dir}</testSourceDirectory>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <reuseForks>false</reuseForks>
                    <threadCount>2</threadCount>
                    <includes>
                        <include>**/Test*.java</include>
                        <include>**/*It.java</include>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
